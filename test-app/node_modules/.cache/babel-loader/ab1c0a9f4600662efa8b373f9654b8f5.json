{"ast":null,"code":"var _jsxFileName = \"/Users/timothy-kellogg/courseware/shared/ntrs-react-fundamentals/test-app/src/Jeopardy.js\";\nimport { Component } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Jeopardy extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      question: {\n        category: {}\n      },\n      score: 0,\n      input: '',\n      loading: true\n    };\n    this.getNewQuestion = async () => {\n      // axios.get('http://jservice.io/api/random').then(result => {\n      //     console.log(result.data[0])\n      //     this.setState({\n      //         question: result.data[0]\n      //     })\n\n      //     if(this.state.loading) this.setState({ loading: false })\n      // })\n      const result = await axios.get('http://jservice.io/api/random');\n      this.setState({\n        question: result.data[0]\n      });\n      console.log('end of getNewQuestion');\n    };\n    this.handleChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n    this.handleSubmit = event => {\n      event.preventDefault();\n      if (this.state.question.answer.toUpperCase().includes(this.state.input.toUpperCase())) {\n        this.setState({\n          score: this.state.score + this.state.question.value\n        });\n      } else {\n        alert(`Correct answer: ${this.state.question.answer}`);\n      }\n      this.setState({\n        input: ''\n      });\n      this.getNewQuestion();\n    };\n  }\n  //when the component mounts, get the first question\n  async componentDidMount() {\n    this.getNewQuestion();\n    console.log('componentDidMount');\n  }\n\n  //display the results on the screen\n  render() {\n    if (this.state.loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 40\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Jeopardy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Score: \", this.state.score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.getNewQuestion,\n        children: \"Skip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Question: \", this.state.question.question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Category: \", this.state.question.category.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Value: \", this.state.question.value]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.handleChange,\n          value: this.state.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Jeopardy;","map":{"version":3,"names":["Component","axios","Jeopardy","state","question","category","score","input","loading","getNewQuestion","result","get","setState","data","console","log","handleChange","event","target","value","handleSubmit","preventDefault","answer","toUpperCase","includes","alert","componentDidMount","render","title"],"sources":["/Users/timothy-kellogg/courseware/shared/ntrs-react-fundamentals/test-app/src/Jeopardy.js"],"sourcesContent":["import { Component } from 'react'\nimport axios from 'axios'\n\nclass Jeopardy extends Component {\n\n    state = {\n        question: {\n            category: {}\n        },\n        score: 0,\n        input: '',\n        loading: true\n    }\n\n    //get a new random question from the API and add it to the data object in state\n    getNewQuestion = async () => {\n        // axios.get('http://jservice.io/api/random').then(result => {\n        //     console.log(result.data[0])\n        //     this.setState({\n        //         question: result.data[0]\n        //     })\n\n        //     if(this.state.loading) this.setState({ loading: false })\n        // })\n        const result = await axios.get('http://jservice.io/api/random')\n        \n        this.setState({ question: result.data[0] })\n\n        console.log('end of getNewQuestion')\n    }\n\n    handleChange = (event) => {\n        this.setState({ input: event.target.value })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n\n        if(this.state.question.answer.toUpperCase().includes(this.state.input.toUpperCase())) {\n            this.setState({ score: this.state.score + this.state.question.value })\n        } else {\n            alert(`Correct answer: ${this.state.question.answer}`)\n        }\n        \n        this.setState({ input: '' })\n\n        this.getNewQuestion()\n    }\n\n    //when the component mounts, get the first question\n    async componentDidMount() {\n        this.getNewQuestion()\n        console.log('componentDidMount')\n    }\n\n    //display the results on the screen\n    render() {\n        if (this.state.loading) return <div>Loading...</div>\n        \n        return (\n            <div>\n                <h2>Jeopardy</h2>\n                <h4>Score: {this.state.score}</h4>\n                <button onClick={this.getNewQuestion}>Skip</button>\n\n                <div>\n                    <h5>Question: {this.state.question.question}</h5>\n                    <h5>Category: {this.state.question.category.title}</h5>\n                    <h5>Value: {this.state.question.value}</h5>\n                </div>\n\n                <form onSubmit={this.handleSubmit}>\n                    <input onChange={this.handleChange} value={this.state.input}></input>\n                    <button>submit</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Jeopardy"],"mappings":"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"},"metadata":{},"sourceType":"module"}