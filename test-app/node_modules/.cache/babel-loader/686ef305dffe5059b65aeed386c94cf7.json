{"ast":null,"code":"var _jsxFileName = \"/Users/timothy-kellogg/courseware/shared/ntrs-react-fundamentals/test-app/src/Jeopardy.js\";\nimport { Component } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Jeopardy extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      question: {},\n      score: 0\n    };\n  }\n  //get a new random question from the API and add it to the data object in state\n  getNewQuestion() {\n    axios.get('http://jservice.io/api/random').then(result => {\n      console.log(result.data[0]);\n      this.setState({\n        question: result.data[0]\n      });\n    });\n  }\n\n  //when the component mounts, get the first question\n  componentDidMount() {\n    this.getNewQuestion();\n  }\n\n  //display the results on the screen\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Jeopardy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Score: \", this.state.score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Question: \", this.state.question.question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Category: \", this.state.question.title.category]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Value: \", this.state.question.value]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), JSON.stringify(this.state.question)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Jeopardy;","map":{"version":3,"names":["Component","axios","Jeopardy","state","question","score","getNewQuestion","get","then","result","console","log","data","setState","componentDidMount","render","title","category","value","JSON","stringify"],"sources":["/Users/timothy-kellogg/courseware/shared/ntrs-react-fundamentals/test-app/src/Jeopardy.js"],"sourcesContent":["import { Component } from 'react'\nimport axios from 'axios'\n\nclass Jeopardy extends Component {\n\n    state = {\n        question: {},\n        score: 0\n    }\n\n    //get a new random question from the API and add it to the data object in state\n    getNewQuestion() {\n        axios.get('http://jservice.io/api/random').then(result => {\n            console.log(result.data[0])\n            this.setState({\n                question: result.data[0]\n            })\n        })\n    }\n\n    //when the component mounts, get the first question\n    componentDidMount() {\n        this.getNewQuestion()\n    }\n\n    //display the results on the screen\n    render() {\n        return (\n            <div>\n                <h2>Jeopardy</h2>\n                <h4>Score: {this.state.score}</h4>\n\n                <div>\n                    <h5>Question: {this.state.question.question}</h5>\n                    <h5>Category: {this.state.question.title.category}</h5>\n                    <h5>Value: {this.state.question.value}</h5>\n                </div>\n\n                <form>\n                    <input></input>\n                    <button>submit</button>\n                </form>\n                {JSON.stringify(this.state.question)}\n            </div>\n        )\n    }\n}\n\nexport default Jeopardy"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,KAAK,MAAM,OAAO;AAAA;AAEzB,MAAMC,QAAQ,SAASF,SAAS,CAAC;EAAA;IAAA;IAAA,KAE7BG,KAAK,GAAG;MACJC,QAAQ,EAAE,CAAC,CAAC;MACZC,KAAK,EAAE;IACX,CAAC;EAAA;EAED;EACAC,cAAc,GAAG;IACbL,KAAK,CAACM,GAAG,CAAC,+BAA+B,CAAC,CAACC,IAAI,CAACC,MAAM,IAAI;MACtDC,OAAO,CAACC,GAAG,CAACF,MAAM,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;MAC3B,IAAI,CAACC,QAAQ,CAAC;QACVT,QAAQ,EAAEK,MAAM,CAACG,IAAI,CAAC,CAAC;MAC3B,CAAC,CAAC;IACN,CAAC,CAAC;EACN;;EAEA;EACAE,iBAAiB,GAAG;IAChB,IAAI,CAACR,cAAc,EAAE;EACzB;;EAEA;EACAS,MAAM,GAAG;IACL,oBACI;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAiB,eACjB;QAAA,sBAAY,IAAI,CAACZ,KAAK,CAACE,KAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,eAElC;QAAA,wBACI;UAAA,yBAAe,IAAI,CAACF,KAAK,CAACC,QAAQ,CAACA,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QAAM,eACjD;UAAA,yBAAe,IAAI,CAACD,KAAK,CAACC,QAAQ,CAACY,KAAK,CAACC,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QAAM,eACvD;UAAA,sBAAY,IAAI,CAACd,KAAK,CAACC,QAAQ,CAACc,KAAK;QAAA;UAAA;UAAA;UAAA;QAAA,QAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QACzC,eAEN;QAAA,wBACI;UAAA;UAAA;UAAA;QAAA,QAAe,eACf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAuB;MAAA;QAAA;QAAA;QAAA;MAAA,QACpB,EACNC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACjB,KAAK,CAACC,QAAQ,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAClC;EAEd;AACJ;AAEA,eAAeF,QAAQ"},"metadata":{},"sourceType":"module"}