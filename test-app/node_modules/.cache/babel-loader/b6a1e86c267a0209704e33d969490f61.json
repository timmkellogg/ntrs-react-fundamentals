{"ast":null,"code":"var _jsxFileName = \"/Users/timothy-kellogg/courseware/shared/ntrs-react-fundamentals/test-app/src/Jeopardy.js\";\nimport { Component } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Jeopardy extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      question: {\n        category: {}\n      },\n      score: 0,\n      input: ''\n    };\n    this.handleChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n    this.handleSubmit = event => {\n      event.preventDefault();\n      if (this.state.question.answer.toUpperCase().includes(this.state.input.toUpperCase())) {\n        this.setState({\n          score: this.state.score + this.state.question.value,\n          input: ''\n        });\n      } else {\n        console.log('INCORRECT');\n      }\n    };\n  }\n  //get a new random question from the API and add it to the data object in state\n  getNewQuestion() {\n    axios.get('http://jservice.io/api/random').then(result => {\n      console.log(result.data[0]);\n      this.setState({\n        question: result.data[0]\n      });\n    });\n  }\n  //when the component mounts, get the first question\n  componentDidMount() {\n    this.getNewQuestion();\n  }\n\n  //display the results on the screen\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Jeopardy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Score: \", this.state.score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.getNewQuestion,\n        children: \"Skip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Question: \", this.state.question.question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Category: \", this.state.question.category.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Value: \", this.state.question.value]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.handleChange,\n          value: this.state.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Jeopardy;","map":{"version":3,"names":["Component","axios","Jeopardy","state","question","category","score","input","handleChange","event","setState","target","value","handleSubmit","preventDefault","answer","toUpperCase","includes","console","log","getNewQuestion","get","then","result","data","componentDidMount","render","title"],"sources":["/Users/timothy-kellogg/courseware/shared/ntrs-react-fundamentals/test-app/src/Jeopardy.js"],"sourcesContent":["import { Component } from 'react'\nimport axios from 'axios'\n\nclass Jeopardy extends Component {\n\n    state = {\n        question: {\n            category: {}\n        },\n        score: 0,\n        input: ''\n    }\n\n    //get a new random question from the API and add it to the data object in state\n    getNewQuestion() {\n        axios.get('http://jservice.io/api/random').then(result => {\n            console.log(result.data[0])\n            this.setState({\n                question: result.data[0]\n            })\n        })\n    }\n\n    handleChange = (event) => {\n        this.setState({ input: event.target.value })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n\n        if(this.state.question.answer.toUpperCase().includes(this.state.input.toUpperCase())) {\n            this.setState({ score: this.state.score + this.state.question.value, input: '' })\n        } else {\n            console.log('INCORRECT')\n        }\n      \n    }\n\n    //when the component mounts, get the first question\n    componentDidMount() {\n        this.getNewQuestion()\n    }\n\n    //display the results on the screen\n    render() {\n        return (\n            <div>\n                <h2>Jeopardy</h2>\n                <h4>Score: {this.state.score}</h4>\n                <button onClick={this.getNewQuestion}>Skip</button>\n\n                <div>\n                    <h5>Question: {this.state.question.question}</h5>\n                    <h5>Category: {this.state.question.category.title}</h5>\n                    <h5>Value: {this.state.question.value}</h5>\n                </div>\n\n                <form onSubmit={this.handleSubmit}>\n                    <input onChange={this.handleChange} value={this.state.input}></input>\n                    <button>submit</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Jeopardy"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,KAAK,MAAM,OAAO;AAAA;AAEzB,MAAMC,QAAQ,SAASF,SAAS,CAAC;EAAA;IAAA;IAAA,KAE7BG,KAAK,GAAG;MACJC,QAAQ,EAAE;QACNC,QAAQ,EAAE,CAAC;MACf,CAAC;MACDC,KAAK,EAAE,CAAC;MACRC,KAAK,EAAE;IACX,CAAC;IAAA,KAYDC,YAAY,GAAIC,KAAK,IAAK;MACtB,IAAI,CAACC,QAAQ,CAAC;QAAEH,KAAK,EAAEE,KAAK,CAACE,MAAM,CAACC;MAAM,CAAC,CAAC;IAChD,CAAC;IAAA,KAEDC,YAAY,GAAIJ,KAAK,IAAK;MACtBA,KAAK,CAACK,cAAc,EAAE;MAEtB,IAAG,IAAI,CAACX,KAAK,CAACC,QAAQ,CAACW,MAAM,CAACC,WAAW,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACd,KAAK,CAACI,KAAK,CAACS,WAAW,EAAE,CAAC,EAAE;QAClF,IAAI,CAACN,QAAQ,CAAC;UAAEJ,KAAK,EAAE,IAAI,CAACH,KAAK,CAACG,KAAK,GAAG,IAAI,CAACH,KAAK,CAACC,QAAQ,CAACQ,KAAK;UAAEL,KAAK,EAAE;QAAG,CAAC,CAAC;MACrF,CAAC,MAAM;QACHW,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;MAC5B;IAEJ,CAAC;EAAA;EAvBD;EACAC,cAAc,GAAG;IACbnB,KAAK,CAACoB,GAAG,CAAC,+BAA+B,CAAC,CAACC,IAAI,CAACC,MAAM,IAAI;MACtDL,OAAO,CAACC,GAAG,CAACI,MAAM,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;MAC3B,IAAI,CAACd,QAAQ,CAAC;QACVN,QAAQ,EAAEmB,MAAM,CAACC,IAAI,CAAC,CAAC;MAC3B,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EAiBA;EACAC,iBAAiB,GAAG;IAChB,IAAI,CAACL,cAAc,EAAE;EACzB;;EAEA;EACAM,MAAM,GAAG;IACL,oBACI;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAiB,eACjB;QAAA,sBAAY,IAAI,CAACvB,KAAK,CAACG,KAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,eAClC;QAAQ,OAAO,EAAE,IAAI,CAACc,cAAe;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc,eAEnD;QAAA,wBACI;UAAA,yBAAe,IAAI,CAACjB,KAAK,CAACC,QAAQ,CAACA,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QAAM,eACjD;UAAA,yBAAe,IAAI,CAACD,KAAK,CAACC,QAAQ,CAACC,QAAQ,CAACsB,KAAK;QAAA;UAAA;UAAA;UAAA;QAAA,QAAM,eACvD;UAAA,sBAAY,IAAI,CAACxB,KAAK,CAACC,QAAQ,CAACQ,KAAK;QAAA;UAAA;UAAA;UAAA;QAAA,QAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QACzC,eAEN;QAAM,QAAQ,EAAE,IAAI,CAACC,YAAa;QAAA,wBAC9B;UAAO,QAAQ,EAAE,IAAI,CAACL,YAAa;UAAC,KAAK,EAAE,IAAI,CAACL,KAAK,CAACI;QAAM;UAAA;UAAA;UAAA;QAAA,QAAS,eACrE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAuB;MAAA;QAAA;QAAA;QAAA;MAAA,QACpB;IAAA;MAAA;MAAA;MAAA;IAAA,QACL;EAEd;AACJ;AAEA,eAAeL,QAAQ"},"metadata":{},"sourceType":"module"}